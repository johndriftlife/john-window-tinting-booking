import { PrismaClient } from '@prisma/client'\nimport bcrypt from 'bcryptjs'\nimport dotenv from 'dotenv'\ndotenv.config()\nconst prisma = new PrismaClient()\nasync function main(){\n const services=[{name:"Carbon Tint",description:"Quality heat rejection and sleek look.",basePrice:15000},{name:"Ceramic Tint",description:"Premium heat rejection and UV protection.",basePrice:25000}]\n for(const s of services){await prisma.service.upsert({where:{name:s.name},update:{description:s.description,basePrice:s.basePrice},create:s})}\n const carbon=await prisma.service.findUnique({where:{name:"Carbon Tint"}});const ceramic=await prisma.service.findUnique({where:{name:"Ceramic Tint"}})\n for(const label of ["1%","5%","20%","35%","50%"]){await prisma.serviceShade.upsert({where:{serviceId_label:{serviceId:carbon.id,label}},update:{},create:{serviceId:carbon.id,label,enabled:true}})}\n for(const label of ["5%","20%"]){await prisma.serviceShade.upsert({where:{serviceId_label:{serviceId:ceramic.id,label}},update:{},create:{serviceId:ceramic.id,label,enabled:true}})}\n const defaultConfig={closedDays:[1],weekdaySlots:["14:00"],saturdaySlots:["09:00","10:00","11:00","12:00","13:00","14:00"],sundaySlots:["10:00","11:00"],saturdayTwoHourSpacing:true}\n await prisma.config.upsert({where:{id:1},update:{data:JSON.stringify(defaultConfig)},create:{id:1,data:JSON.stringify(defaultConfig)}})\n const hash=bcrypt.hashSync(process.env.ADMIN_KEY||"changeme",10)\n await prisma.adminSecret.upsert({where:{id:1},update:{keyHash:hash},create:{id:1,keyHash:hash}})\n console.log("Seed complete")}\nmain().then(()=>process.exit(0)).catch(e=>{console.error(e);process.exit(1)})\n